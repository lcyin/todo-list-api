{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Todo List API",
    "description": "A RESTful API for managing todo items with user authentication",
    "contact": {
      "name": "API Support",
      "email": "support@todoapi.com"
    },
    "license": {
      "name": "ISC"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://api.todolist.com",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    },
    {
      "name": "Todos",
      "description": "Todo management endpoints"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the user",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address",
            "example": "john.doe@example.com"
          },
          "firstName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "User first name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "User last name",
            "example": "Doe"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "description": "User creation timestamp",
            "example": "2023-01-01T00:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "description": "User last update timestamp",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "createdAt",
          "updatedAt"
        ],
        "title": "User",
        "description": "User information without password"
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Unique identifier for the user",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address",
                    "example": "john.doe@example.com"
                  },
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "User first name",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "User last name",
                    "example": "Doe"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date",
                    "description": "User creation timestamp",
                    "example": "2023-01-01T00:00:00Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date",
                    "description": "User last update timestamp",
                    "example": "2023-01-01T00:00:00Z"
                  }
                },
                "required": [
                  "id",
                  "email",
                  "firstName",
                  "lastName",
                  "createdAt",
                  "updatedAt"
                ],
                "title": "User",
                "description": "User information without password"
              },
              "token": {
                "type": "string",
                "description": "JWT authentication token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            },
            "required": [
              "user",
              "token"
            ],
            "title": "AuthData",
            "description": "Authentication response data"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "User authenticated successfully"
          }
        },
        "required": [
          "success",
          "data",
          "message"
        ],
        "title": "AuthResponse",
        "description": "Authentication response"
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Unique identifier for the user",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "User email address",
                "example": "john.doe@example.com"
              },
              "firstName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "description": "User first name",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "description": "User last name",
                "example": "Doe"
              },
              "createdAt": {
                "type": "string",
                "format": "date",
                "description": "User creation timestamp",
                "example": "2023-01-01T00:00:00Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date",
                "description": "User last update timestamp",
                "example": "2023-01-01T00:00:00Z"
              }
            },
            "required": [
              "id",
              "email",
              "firstName",
              "lastName",
              "createdAt",
              "updatedAt"
            ],
            "title": "User",
            "description": "User information without password"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "User retrieved successfully"
          }
        },
        "required": [
          "success",
          "data",
          "message"
        ],
        "title": "UserResponse",
        "description": "User data response"
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false,
            "description": "Always false for error responses",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid credentials"
          },
          "stack": {
            "type": "string",
            "description": "Error stack trace (development only)",
            "example": "Error: Invalid credentials\n    at ..."
          }
        },
        "required": [
          "error"
        ],
        "title": "ErrorResponse",
        "description": "Error response format"
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)",
            "description": "User password with complexity requirements",
            "example": "MySecureP@ss123"
          },
          "firstName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "User first name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "User last name",
            "example": "Doe"
          }
        },
        "required": [
          "email",
          "password",
          "firstName",
          "lastName"
        ],
        "title": "RegisterRequest",
        "description": "User registration data"
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "description": "User password",
            "example": "MySecureP@ss123"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest",
        "description": "User login credentials"
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "lastName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "title": "UpdateProfileRequest",
        "description": "User profile update data"
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "minLength": 1
          },
          "newPassword": {
            "type": "string",
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)"
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "title": "ChangePasswordRequest",
        "description": "Password change data"
      },
      "Todo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the todo",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Todo title",
            "example": "Complete project documentation"
          },
          "description": {
            "type": "string",
            "description": "Todo description",
            "example": "Write comprehensive API documentation with examples"
          },
          "completed": {
            "type": "boolean",
            "description": "Todo completion status",
            "example": false
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user who owns this todo",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "description": "Todo creation timestamp",
            "example": "2023-01-01T00:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "description": "Todo last update timestamp",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "required": [
          "id",
          "title",
          "completed",
          "userId",
          "createdAt",
          "updatedAt"
        ],
        "title": "Todo",
        "description": "Todo item"
      },
      "TodoResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Unique identifier for the todo",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "title": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "description": "Todo title",
                "example": "Complete project documentation"
              },
              "description": {
                "type": "string",
                "description": "Todo description",
                "example": "Write comprehensive API documentation with examples"
              },
              "completed": {
                "type": "boolean",
                "description": "Todo completion status",
                "example": false
              },
              "userId": {
                "type": "string",
                "format": "uuid",
                "description": "ID of the user who owns this todo",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "createdAt": {
                "type": "string",
                "format": "date",
                "description": "Todo creation timestamp",
                "example": "2023-01-01T00:00:00Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date",
                "description": "Todo last update timestamp",
                "example": "2023-01-01T00:00:00Z"
              }
            },
            "required": [
              "id",
              "title",
              "completed",
              "userId",
              "createdAt",
              "updatedAt"
            ],
            "title": "Todo",
            "description": "Todo item"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Todo retrieved successfully"
          }
        },
        "required": [
          "success",
          "data",
          "message"
        ],
        "title": "TodoResponse",
        "description": "Single todo response"
      },
      "TodosResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for the todo",
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "title": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "description": "Todo title",
                  "example": "Complete project documentation"
                },
                "description": {
                  "type": "string",
                  "description": "Todo description",
                  "example": "Write comprehensive API documentation with examples"
                },
                "completed": {
                  "type": "boolean",
                  "description": "Todo completion status",
                  "example": false
                },
                "userId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "ID of the user who owns this todo",
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date",
                  "description": "Todo creation timestamp",
                  "example": "2023-01-01T00:00:00Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date",
                  "description": "Todo last update timestamp",
                  "example": "2023-01-01T00:00:00Z"
                }
              },
              "required": [
                "id",
                "title",
                "completed",
                "userId",
                "createdAt",
                "updatedAt"
              ],
              "title": "Todo",
              "description": "Todo item"
            },
            "description": "List of todos"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Todos retrieved successfully"
          }
        },
        "required": [
          "success",
          "data",
          "message"
        ],
        "title": "TodosResponse",
        "description": "Multiple todos response"
      },
      "CreateTodoRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Todo title",
            "example": "Complete project documentation"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "Todo description",
            "example": "Write comprehensive API documentation with examples"
          }
        },
        "required": [
          "title"
        ],
        "title": "CreateTodoRequest",
        "description": "Data for creating a new todo"
      },
      "UpdateTodoRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Todo title",
            "example": "Complete project documentation"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "Todo description",
            "example": "Write comprehensive API documentation with examples"
          },
          "completed": {
            "type": "boolean",
            "description": "Todo completion status",
            "example": true
          }
        },
        "required": [
          "title"
        ],
        "title": "UpdateTodoRequest",
        "description": "Data for updating a todo"
      }
    },
    "parameters": {}
  },
  "paths": {
    "/auth/register": {
      "post": {
        "description": "Register a new user",
        "summary": "User Registration",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)",
                    "description": "User password with complexity requirements",
                    "example": "MySecureP@ss123"
                  },
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "User first name",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "User last name",
                    "example": "Doe"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "firstName",
                  "lastName"
                ],
                "title": "RegisterRequest",
                "description": "User registration data"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Unique identifier for the user",
                              "example": "123e4567-e89b-12d3-a456-426614174000"
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "description": "User email address",
                              "example": "john.doe@example.com"
                            },
                            "firstName": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 100,
                              "description": "User first name",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 100,
                              "description": "User last name",
                              "example": "Doe"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date",
                              "description": "User creation timestamp",
                              "example": "2023-01-01T00:00:00Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date",
                              "description": "User last update timestamp",
                              "example": "2023-01-01T00:00:00Z"
                            }
                          },
                          "required": [
                            "id",
                            "email",
                            "firstName",
                            "lastName",
                            "createdAt",
                            "updatedAt"
                          ],
                          "title": "User",
                          "description": "User information without password"
                        },
                        "token": {
                          "type": "string",
                          "description": "JWT authentication token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      },
                      "required": [
                        "user",
                        "token"
                      ],
                      "title": "AuthData",
                      "description": "Authentication response data"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "User authenticated successfully"
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "message"
                  ],
                  "title": "AuthResponse",
                  "description": "Authentication response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "description": "Authenticate user and return JWT token",
        "summary": "User Login",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 1,
                    "description": "User password",
                    "example": "MySecureP@ss123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "title": "LoginRequest",
                "description": "User login credentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Unique identifier for the user",
                              "example": "123e4567-e89b-12d3-a456-426614174000"
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "description": "User email address",
                              "example": "john.doe@example.com"
                            },
                            "firstName": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 100,
                              "description": "User first name",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 100,
                              "description": "User last name",
                              "example": "Doe"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date",
                              "description": "User creation timestamp",
                              "example": "2023-01-01T00:00:00Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date",
                              "description": "User last update timestamp",
                              "example": "2023-01-01T00:00:00Z"
                            }
                          },
                          "required": [
                            "id",
                            "email",
                            "firstName",
                            "lastName",
                            "createdAt",
                            "updatedAt"
                          ],
                          "title": "User",
                          "description": "User information without password"
                        },
                        "token": {
                          "type": "string",
                          "description": "JWT authentication token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      },
                      "required": [
                        "user",
                        "token"
                      ],
                      "title": "AuthData",
                      "description": "Authentication response data"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "User authenticated successfully"
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "message"
                  ],
                  "title": "AuthResponse",
                  "description": "Authentication response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "description": "Get current user profile information",
        "summary": "Get User Profile",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the user",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "User email address",
                          "example": "john.doe@example.com"
                        },
                        "firstName": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 100,
                          "description": "User first name",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 100,
                          "description": "User last name",
                          "example": "Doe"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date",
                          "description": "User creation timestamp",
                          "example": "2023-01-01T00:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date",
                          "description": "User last update timestamp",
                          "example": "2023-01-01T00:00:00Z"
                        }
                      },
                      "required": [
                        "id",
                        "email",
                        "firstName",
                        "lastName",
                        "createdAt",
                        "updatedAt"
                      ],
                      "title": "User",
                      "description": "User information without password"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "User retrieved successfully"
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "message"
                  ],
                  "title": "UserResponse",
                  "description": "User data response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update current user profile information",
        "summary": "Update User Profile",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "title": "UpdateProfileRequest",
                "description": "User profile update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the user",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "User email address",
                          "example": "john.doe@example.com"
                        },
                        "firstName": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 100,
                          "description": "User first name",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 100,
                          "description": "User last name",
                          "example": "Doe"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date",
                          "description": "User creation timestamp",
                          "example": "2023-01-01T00:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date",
                          "description": "User last update timestamp",
                          "example": "2023-01-01T00:00:00Z"
                        }
                      },
                      "required": [
                        "id",
                        "email",
                        "firstName",
                        "lastName",
                        "createdAt",
                        "updatedAt"
                      ],
                      "title": "User",
                      "description": "User information without password"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "User retrieved successfully"
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "message"
                  ],
                  "title": "UserResponse",
                  "description": "User data response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      }
    },
    "/auth/change-password": {
      "put": {
        "description": "Change user password",
        "summary": "Change Password",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "minLength": 1
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 8,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)"
                  }
                },
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "title": "ChangePasswordRequest",
                "description": "Password change data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      }
    },
    "/auth/account": {
      "delete": {
        "description": "Soft delete user account",
        "summary": "Delete User Account",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User account deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      }
    },
    "/todos": {
      "get": {
        "description": "Retrieve all todos for the authenticated user",
        "summary": "Get All Todos",
        "tags": [
          "Todos"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Todos retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the todo",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                          },
                          "title": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "description": "Todo title",
                            "example": "Complete project documentation"
                          },
                          "description": {
                            "type": "string",
                            "description": "Todo description",
                            "example": "Write comprehensive API documentation with examples"
                          },
                          "completed": {
                            "type": "boolean",
                            "description": "Todo completion status",
                            "example": false
                          },
                          "userId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "ID of the user who owns this todo",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date",
                            "description": "Todo creation timestamp",
                            "example": "2023-01-01T00:00:00Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date",
                            "description": "Todo last update timestamp",
                            "example": "2023-01-01T00:00:00Z"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "completed",
                          "userId",
                          "createdAt",
                          "updatedAt"
                        ],
                        "title": "Todo",
                        "description": "Todo item"
                      },
                      "description": "List of todos"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "Todos retrieved successfully"
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "message"
                  ],
                  "title": "TodosResponse",
                  "description": "Multiple todos response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new todo for the authenticated user",
        "summary": "Create Todo",
        "tags": [
          "Todos"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "Todo title",
                    "example": "Complete project documentation"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "Todo description",
                    "example": "Write comprehensive API documentation with examples"
                  }
                },
                "required": [
                  "title"
                ],
                "title": "CreateTodoRequest",
                "description": "Data for creating a new todo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Todo created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the todo",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "title": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "description": "Todo title",
                          "example": "Complete project documentation"
                        },
                        "description": {
                          "type": "string",
                          "description": "Todo description",
                          "example": "Write comprehensive API documentation with examples"
                        },
                        "completed": {
                          "type": "boolean",
                          "description": "Todo completion status",
                          "example": false
                        },
                        "userId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the user who owns this todo",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date",
                          "description": "Todo creation timestamp",
                          "example": "2023-01-01T00:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date",
                          "description": "Todo last update timestamp",
                          "example": "2023-01-01T00:00:00Z"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "completed",
                        "userId",
                        "createdAt",
                        "updatedAt"
                      ],
                      "title": "Todo",
                      "description": "Todo item"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "Todo retrieved successfully"
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "message"
                  ],
                  "title": "TodoResponse",
                  "description": "Single todo response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "get": {
        "description": "Retrieve a specific todo by ID",
        "summary": "Get Todo by ID",
        "tags": [
          "Todos"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Todo ID",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "Todo ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Todo retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the todo",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "title": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "description": "Todo title",
                          "example": "Complete project documentation"
                        },
                        "description": {
                          "type": "string",
                          "description": "Todo description",
                          "example": "Write comprehensive API documentation with examples"
                        },
                        "completed": {
                          "type": "boolean",
                          "description": "Todo completion status",
                          "example": false
                        },
                        "userId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the user who owns this todo",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date",
                          "description": "Todo creation timestamp",
                          "example": "2023-01-01T00:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date",
                          "description": "Todo last update timestamp",
                          "example": "2023-01-01T00:00:00Z"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "completed",
                        "userId",
                        "createdAt",
                        "updatedAt"
                      ],
                      "title": "Todo",
                      "description": "Todo item"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "Todo retrieved successfully"
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "message"
                  ],
                  "title": "TodoResponse",
                  "description": "Single todo response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          },
          "404": {
            "description": "Todo not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a specific todo by ID",
        "summary": "Update Todo",
        "tags": [
          "Todos"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Todo ID",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "Todo ID",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "Todo title",
                    "example": "Complete project documentation"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "Todo description",
                    "example": "Write comprehensive API documentation with examples"
                  },
                  "completed": {
                    "type": "boolean",
                    "description": "Todo completion status",
                    "example": true
                  }
                },
                "required": [
                  "title"
                ],
                "title": "UpdateTodoRequest",
                "description": "Data for updating a todo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the todo",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "title": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "description": "Todo title",
                          "example": "Complete project documentation"
                        },
                        "description": {
                          "type": "string",
                          "description": "Todo description",
                          "example": "Write comprehensive API documentation with examples"
                        },
                        "completed": {
                          "type": "boolean",
                          "description": "Todo completion status",
                          "example": false
                        },
                        "userId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the user who owns this todo",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date",
                          "description": "Todo creation timestamp",
                          "example": "2023-01-01T00:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date",
                          "description": "Todo last update timestamp",
                          "example": "2023-01-01T00:00:00Z"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "completed",
                        "userId",
                        "createdAt",
                        "updatedAt"
                      ],
                      "title": "Todo",
                      "description": "Todo item"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "Todo retrieved successfully"
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "message"
                  ],
                  "title": "TodoResponse",
                  "description": "Single todo response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          },
          "404": {
            "description": "Todo not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a specific todo by ID",
        "summary": "Delete Todo",
        "tags": [
          "Todos"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Todo ID",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "Todo ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Todo deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          },
          "404": {
            "description": "Todo not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false,
                      "description": "Always false for error responses",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Invalid credentials"
                    },
                    "stack": {
                      "type": "string",
                      "description": "Error stack trace (development only)",
                      "example": "Error: Invalid credentials\n    at ..."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "ErrorResponse",
                  "description": "Error response format"
                }
              }
            }
          }
        }
      }
    }
  }
}